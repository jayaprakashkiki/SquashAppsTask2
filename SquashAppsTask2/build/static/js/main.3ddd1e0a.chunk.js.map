{"version":3,"sources":["Assets/1.png","Database/Firebase.js","Pages/GettingStartedPage.js","Pages/LoginPage.js","Pages/PersonalDetails.js","Pages/Announcement.js","App.js","serviceWorker.js","index.js","Assets/2.png"],"names":["module","exports","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","GettingStartedPage","dbAuth","auth","state","mobile","Navbar","expand","className","Brand","Toggle","aria-controls","Collapse","id","Nav","Link","to","Container","Row","Col","md","Image","fluid","src","require","alt","style","lineHeight","Form","Group","Label","color","Control","placeholder","value","this","onChange","Text","setState","target","Button","onClick","onSignInSubmit","backgroundColor","border","Component","LoginPage","SignIn","emailVal","passwordVal","email","password","signInWithEmailAndPassword","then","console","log","userID","currentUser","uid","localStorage","setItem","props","history","push","catch","err","toast","type","controlId","Check","label","variant","width","Toast","delay","show","autohide","onClose","position","top","right","margin","Header","Body","PersonalDetails","dbUser","firestore","collection","fName","lName","companyName","location","emp","domain","form1","form2","createUserWithEmailAndPassword","user","doc","set","setTimeout","SignUp","size","InputGroup","Prepend","Announcement","GetUser","a","USER_ID","getItem","get","snapshot","data","GetPost","myArray","dbPostGet","forEach","item","subject","description","date","timestamp","docId","announceData","SearchData","Post","Date","now","today","String","getDate","padStart","getMonth","getFullYear","dbPost","add","category","notify","modal","openNav","title_pad","closeNav","ModalComment","ID","modalComment","AannouncID","subjectComment","descriptionComment","fNameComment","lNameComment","idComment","commentFinalData","comments","PostComment","update","FieldValue","arrayUnion","commentInput","orderBy","announcID","SearchWord","removeItem","text","finalData","filter","itemData","toLowerCase","textData","indexOf","class","href","fontWeight","fontSize","float","borderRadius","Logout","cursor","paddingLeft","Search","height","window","innerHeight","map","index","Card","as","key","borderColor","Title","Modal","onHide","closeButton","rows","marginRight","left","App","path","exact","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.3ddd1e0a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/1.c319fa2a.png\";","import firebase from \"firebase\";\r\nimport \"firebase/firestore\";\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyCBpllpMwL3ir5JIob4LIJlQeIijytSxN4\",\r\n  authDomain: \"squashappstask.firebaseapp.com\",\r\n  databaseURL: \"https://squashappstask.firebaseio.com\",\r\n  projectId: \"squashappstask\",\r\n  storageBucket: \"squashappstask.appspot.com\",\r\n  messagingSenderId: \"542066500610\",\r\n  appId: \"1:542066500610:web:7a7f61769b8ed18b7d331b\",\r\n  measurementId: \"G-1XSRRN8DC7\",\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Container,\r\n  Form,\r\n  Row,\r\n  Image,\r\n  Nav,\r\n  Navbar,\r\n} from \"react-bootstrap\";\r\n//Icons\r\nimport { MdMail } from \"react-icons/md\";\r\n//Database\r\nimport firebase from \"../Database/Firebase\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class GettingStartedPage extends Component {\r\n  constructor() {\r\n    super();\r\n    this.dbAuth = firebase.auth();\r\n    this.state = {\r\n      mobile: \"\",\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n\r\n      <div>\r\n        {/* ******************** Navigation ************************ */}\r\n\r\n        <Navbar expand=\"lg\" className=\"bg_white shadow-sm\">\r\n          <Navbar.Brand className=\"txt_green my_font \">\r\n            SA-INTRANET\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"mr-auto\"></Nav>\r\n            <Nav>\r\n              <Nav.Link className=\"my_font txt_green\">\r\n                <Link className=\"my_font txt_green\" to=\"/LoginPage\">Login</Link>\r\n              </Nav.Link>\r\n              <Nav.Link>\r\n                <MdMail /> support@squashapps.com\r\n              </Nav.Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n\r\n        {/* ******************** Container View Port ************************ */}\r\n\r\n        <Container>\r\n          <Row className=\"pt-5\">\r\n            <Col md={6}>\r\n              <Image fluid src={require(\"../Assets/1.png\")} alt=\"Image\" />\r\n            </Col>\r\n            <Col md={6} className=\"pt-4\">\r\n              <h3\r\n                className=\"txt_blue text-left font-weight-bold \"\r\n                style={{ lineHeight: 1.5 }}\r\n              >\r\n                Make Your Life Easy <br /> with Intranet!\r\n              </h3>\r\n              <p className=\" txt_blue\">\r\n                To make a workspace from scratch, please confirm your email\r\n                address.\r\n              </p>\r\n\r\n              <div>\r\n                <Form className=\"pt-4\">\r\n                  <Form.Group>\r\n                    <Form.Label style={{ color: \"gray\" }}>\r\n                      Email Address\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                      placeholder=\"name@email.com\"\r\n                      value={this.state.mobile}\r\n                      onChange={(Text) =>\r\n                        this.setState({ mobile: Text.target.value })\r\n                      }\r\n                    />\r\n                  </Form.Group>\r\n                  <Link to=\"/PersonalDetails\">\r\n                    <Button\r\n                      onClick={this.onSignInSubmit}\r\n                      className=\"mt-3\"\r\n                      style={{ backgroundColor: \"#3bc163\", border: 0 }}\r\n                    >\r\n                      Confirm Email\r\n                    </Button>\r\n                  </Link>\r\n                </Form>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Container,\r\n  Form,\r\n  Row,\r\n  Image,\r\n  Nav,\r\n  Navbar,\r\n  Toast,\r\n} from \"react-bootstrap\";\r\n//Icons\r\nimport { MdMail } from \"react-icons/md\";\r\n//Database\r\nimport firebase from \"../Database/Firebase\";\r\n\r\nexport default class LoginPage extends Component {\r\n  constructor() {\r\n    super();\r\n    this.dbAuth = firebase.auth();\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      toast: false,\r\n    };\r\n  }\r\n\r\n  // ******************** Signin Auth Handler ************************\r\n\r\n  SignIn = () => {\r\n    this.setState({\r\n      emailVal: \"\",\r\n      passwordVal: \"\",\r\n    });\r\n    if (this.state.email == \"\") {\r\n      this.setState({ emailVal: \"Email Required !\" });\r\n    } else if (this.state.password == \"\") {\r\n      this.setState({ passwordVal: \"Password Required !\" });\r\n    } else {\r\n      this.dbAuth\r\n        .signInWithEmailAndPassword(this.state.email, this.state.password)\r\n        .then(() => {\r\n          console.log(\"SignIn done !!!\");\r\n          const userID = this.dbAuth.currentUser.uid;\r\n          console.log(userID);\r\n          this.setState({\r\n            email: \"\",\r\n            password: \"\",\r\n          });\r\n          localStorage.setItem(\"USER_ID\", userID);\r\n          this.props.history.push(\"/Announcement\");\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"ERROR SPOTTED\", err);\r\n          this.setState({\r\n            toast: true,\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* ******************** Navigation ************************ */}\r\n\r\n        <Navbar expand=\"lg\" className=\"bg_white shadow-sm\">\r\n          <Navbar.Brand className=\"txt_green my_font \">\r\n            SA-INTRANET\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"mr-auto\"></Nav>\r\n            <Nav>\r\n              <Button\r\n                className=\"mr-4\"\r\n                style={{ backgroundColor: \"#3bc163\", border: 0 }}\r\n              >\r\n                Get Started\r\n              </Button>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n        {/* ******************** Container View Port ************************ */}\r\n\r\n        <Container>\r\n          <Row className=\"pt-5\">\r\n            <Col md={6}>\r\n              <Image fluid src={require(\"../Assets/2.png\")} alt=\"Image\" />\r\n            </Col>\r\n            <Col md={6} className=\"pt-4\">\r\n              <h3\r\n                className=\"txt_blue text-left font-weight-bold \"\r\n                style={{ lineHeight: 1.5 }}\r\n              >\r\n                Login to your app\r\n              </h3>\r\n              <p className=\" txt_blue\">\r\n                To make a workspace from scratch, please confirm your email\r\n                address.\r\n              </p>\r\n\r\n              <div>\r\n                <Form className=\"pt-4\">\r\n                  <Form.Group>\r\n                    <Form.Label style={{ color: \"gray\" }}>Email</Form.Label>\r\n                    <Form.Control\r\n                      placeholder=\"Enter your Email\"\r\n                      value={this.state.email}\r\n                      onChange={(Text) =>\r\n                        this.setState({ email: Text.target.value })\r\n                      }\r\n                    />\r\n                    {<p className=\"text-danger\">{this.state.emailVal}</p>}\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                    <Form.Label style={{ color: \"gray\" }}>Password</Form.Label>\r\n                    <Form.Control\r\n                      placeholder=\"Enter your password\"\r\n                      type=\"password\"\r\n                      value={this.state.password}\r\n                      onChange={(Text) =>\r\n                        this.setState({ password: Text.target.value })\r\n                      }\r\n                    />\r\n                    {<p className=\"text-danger\">{this.state.passwordVal}</p>}\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"formBasicCheckbox\">\r\n                    <div className=\"d-flex flex-row justify-content-between\">\r\n                      <Form.Check type=\"checkbox\" label=\"Remind Me\" />\r\n                      <Button variant=\"link\">Forgot Password ?</Button>\r\n                    </div>\r\n                  </Form.Group>\r\n                  <Button\r\n                    onClick={() => this.SignIn()}\r\n                    className=\"mt-3\"\r\n                    style={{\r\n                      width: 100,\r\n                      backgroundColor: \"#3bc163\",\r\n                      border: 0,\r\n                    }}\r\n                  >\r\n                    Sign In\r\n                  </Button>\r\n                </Form>\r\n              </div>\r\n            </Col>\r\n            \r\n            {/* ******************** Danger Toast ************************ */}\r\n\r\n            <Toast\r\n              delay={2000}\r\n              show={this.state.toast}\r\n              autohide\r\n              onClose={() => this.setState({ toast: false })}\r\n              className=\"bg-danger\"\r\n              style={{\r\n                position: \"absolute\",\r\n                top: 50,\r\n                right: 0,\r\n                margin: 20,\r\n              }}\r\n            >\r\n              <Toast.Header className=\"bg-danger\">\r\n                <strong className=\"mr-auto txt_white\">Something Wrong !</strong>\r\n              </Toast.Header>\r\n              <Toast.Body>\r\n                <strong className=\"txt_white\">\r\n                  Incorrect Email or password\r\n                </strong>\r\n              </Toast.Body>\r\n            </Toast>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Container,\r\n  Form,\r\n  Row,\r\n  Image,\r\n  Nav,\r\n  Navbar,\r\n  InputGroup,\r\n  Toast,\r\n} from \"react-bootstrap\";\r\n//Icons\r\nimport { MdMail } from \"react-icons/md\";\r\n//Database\r\nimport firebase from \"../Database/Firebase\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport default class PersonalDetails extends Component {\r\n  constructor() {\r\n    super();\r\n    this.dbAuth = firebase.auth();\r\n    this.dbUser = firebase.firestore().collection(\"User\");\r\n    this.state = {\r\n      //signin form\r\n      fName: \"\",\r\n      lName: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      //company detail form\r\n      companyName: \"\",\r\n      location: \"\",\r\n      emp: \"\",\r\n      domain: \"\",\r\n      //toast\r\n      toast: false,\r\n      //formsift\r\n      form1: true,\r\n      form2: false,\r\n    };\r\n  }\r\n\r\n  // **********************Signup Auth Handler***********************\r\n  SignUp() {\r\n    console.log(\"signup called\");\r\n    this.dbAuth\r\n      .createUserWithEmailAndPassword(this.state.email, this.state.password)\r\n      .then((user) => {\r\n        console.log(user);\r\n        const userID = this.dbAuth.currentUser.uid;\r\n\r\n        this.dbUser\r\n          .doc(`${userID}`)\r\n          .set({\r\n            userID: userID,\r\n            fName: this.state.fName,\r\n            lName: this.state.lName,\r\n            email: this.state.email,\r\n            companyName: this.state.companyName,\r\n            location: this.state.location,\r\n            emp: this.state.emp,\r\n            domain: this.state.domain,\r\n          })\r\n          .then(() => {\r\n            this.setState({\r\n              toast: true,\r\n              fName: \"\",\r\n              lName: \"\",\r\n              email: \"\",\r\n              password: \"\",\r\n            });\r\n            console.log(\r\n              \"***************** SUCCESSFULLY SIGNEDUP ********************\"\r\n            );\r\n            setTimeout(() => {\r\n              this.props.history.push(\"/LoginPage\");\r\n            }, 2000);\r\n          })\r\n          .catch((err) => {\r\n            console.log(\"ERROR SPOTTED\", err);\r\n          });\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"ERROR SPOTTED\", err);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* ******************** Navigation ************************ */}\r\n\r\n        <Navbar expand=\"lg\" className=\"bg_white shadow-sm\">\r\n          <Navbar.Brand className=\"txt_green my_font \">\r\n            SA-INTRANET\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"mr-auto\"></Nav>\r\n            <Nav>\r\n              <Nav.Link>\r\n                <MdMail /> support@squashapps.com\r\n              </Nav.Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n        <Container>\r\n          <Row className=\"pt-5\">\r\n            <Col md={7}>\r\n              <Image fluid src={require(\"../Assets/2.png\")} alt=\"Image\" />\r\n            </Col>\r\n\r\n            {/* ******************* User Detail Form ********************* */}\r\n            {this.state.form2 && (\r\n              <Col md={5} className=\"pt-4\">\r\n                <h3\r\n                  className=\"txt_blue text-left font-weight-bold \"\r\n                  style={{ lineHeight: 1.5 }}\r\n                >\r\n                  Create Personal Account\r\n                </h3>\r\n                <p className=\" txt_blue\">\r\n                  To make a workspace from scratch, please confirm your email\r\n                  address.\r\n                </p>\r\n                <div>\r\n                  <Form className=\"pt-4\">\r\n                    <Form.Row>\r\n                      <Col>\r\n                        <Form.Group>\r\n                          <Form.Label style={{ color: \"gray\" }}>\r\n                            First Name\r\n                          </Form.Label>\r\n                          <Form.Control\r\n                            placeholder=\"Jaya\"\r\n                            value={this.state.fName}\r\n                            onChange={(Text) =>\r\n                              this.setState({ fName: Text.target.value })\r\n                            }\r\n                          />\r\n                        </Form.Group>\r\n                      </Col>\r\n                      <Col>\r\n                        <Form.Group>\r\n                          <Form.Label style={{ color: \"gray\" }}>\r\n                            Last Name\r\n                          </Form.Label>\r\n                          <Form.Control\r\n                            placeholder=\"Prakash\"\r\n                            value={this.state.lName}\r\n                            onChange={(Text) =>\r\n                              this.setState({ lName: Text.target.value })\r\n                            }\r\n                          />\r\n                        </Form.Group>\r\n                      </Col>\r\n                    </Form.Row>\r\n\r\n                    <Form.Group>\r\n                      <Form.Label style={{ color: \"gray\" }}>Email</Form.Label>\r\n                      <Form.Control\r\n                        placeholder=\"Enter your email\"\r\n                        value={this.state.email}\r\n                        onChange={(Text) =>\r\n                          this.setState({ email: Text.target.value })\r\n                        }\r\n                      />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group>\r\n                      <Form.Label style={{ color: \"gray\" }}>\r\n                        Password\r\n                      </Form.Label>\r\n                      <Form.Control\r\n                        placeholder=\"Enter your password\"\r\n                        type=\"password\"\r\n                        value={this.state.password}\r\n                        onChange={(Text) =>\r\n                          this.setState({ password: Text.target.value })\r\n                        }\r\n                      />\r\n                    </Form.Group>\r\n\r\n                    <Button\r\n                      onClick={() => this.SignUp()}\r\n                      size=\"md\"\r\n                      className=\"mt-0\"\r\n                      style={{\r\n                        width: 100,\r\n                        backgroundColor: \"#3bc163\",\r\n                        border: 0,\r\n                      }}\r\n                    >\r\n                      Complete\r\n                    </Button>\r\n                  </Form>\r\n                </div>\r\n              </Col>\r\n            )}\r\n\r\n            {/* ******************* Company Detail Form ********************* */}\r\n\r\n            {this.state.form1 && (\r\n              <Col md={5} className=\"pt-4\">\r\n                <h3\r\n                  className=\"txt_blue text-left font-weight-bold \"\r\n                  style={{ lineHeight: 1.5 }}\r\n                >\r\n                  Setup Your Application\r\n                </h3>\r\n                <p className=\" txt_blue\">\r\n                  To make a workspace from scratch, please confirm your email\r\n                  address.\r\n                </p>\r\n\r\n                <div>\r\n                  <Form className=\"pt-4\">\r\n                    <Form.Group>\r\n                      <Form.Label style={{ color: \"gray\" }}>\r\n                        Company Name\r\n                      </Form.Label>\r\n                      <Form.Control\r\n                        placeholder=\"Enter your company name\"\r\n                        value={this.state.companyName}\r\n                        onChange={(Text) =>\r\n                          this.setState({ companyName: Text.target.value })\r\n                        }\r\n                      />\r\n                    </Form.Group>\r\n                    <Form.Row>\r\n                      <Col>\r\n                        <Form.Group>\r\n                          <Form.Label style={{ color: \"gray\" }}>\r\n                            Location\r\n                          </Form.Label>\r\n                          <Form.Control\r\n                            placeholder=\"Tamil Nadu\"\r\n                            value={this.state.location}\r\n                            onChange={(Text) =>\r\n                              this.setState({ location: Text.target.value })\r\n                            }\r\n                          />\r\n                        </Form.Group>\r\n                      </Col>\r\n                      <Col>\r\n                        <Form.Group>\r\n                          <Form.Label style={{ color: \"gray\" }}>\r\n                            No. of Employees\r\n                          </Form.Label>\r\n                          <Form.Control\r\n                            placeholder=\"50\"\r\n                            value={this.state.emp}\r\n                            onChange={(Text) =>\r\n                              this.setState({ emp: Text.target.value })\r\n                            }\r\n                          />\r\n                        </Form.Group>\r\n                      </Col>\r\n                    </Form.Row>\r\n\r\n                    <InputGroup className=\"mb-3\">\r\n                      <Form.Control\r\n                        placeholder=\"Domain Name\"\r\n                        value={this.state.domain}\r\n                        onChange={(Text) =>\r\n                          this.setState({ domain: Text.target.value })\r\n                        }\r\n                      />\r\n                      <InputGroup.Prepend>\r\n                        <InputGroup.Text id=\"inputGroup-sizing-sm\">\r\n                          .intranet.com\r\n                        </InputGroup.Text>\r\n                      </InputGroup.Prepend>\r\n                    </InputGroup>\r\n                    <Button\r\n                      size=\"md\"\r\n                      className=\"mt-0\"\r\n                      style={{\r\n                        width: 100,\r\n                        backgroundColor: \"#3bc163\",\r\n                        border: 0,\r\n                      }}\r\n                      onClick={() =>\r\n                        this.setState({ form1: false, form2: true })\r\n                      }\r\n                    >\r\n                      Next\r\n                    </Button>\r\n                  </Form>\r\n                </div>\r\n              </Col>\r\n            )}\r\n\r\n            {/* ******************* Success Toast ********************* */}\r\n\r\n            <Toast\r\n              delay={2000}\r\n              show={this.state.toast}\r\n              autohide\r\n              onClose={() => this.setState({ toast: false })}\r\n              className=\"bg-success\"\r\n              style={{\r\n                position: \"absolute\",\r\n                top: 50,\r\n                right: 0,\r\n                margin: 20,\r\n              }}\r\n            >\r\n              <Toast.Header className=\"bg-success\">\r\n                <strong className=\"mr-auto txt_white\">SA-INTRANET</strong>\r\n              </Toast.Header>\r\n              <Toast.Body>\r\n                <p className=\"txt_white\">Woohoo, Successfully Signed</p>\r\n              </Toast.Body>\r\n            </Toast>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Col,\r\n  Container,\r\n  Form,\r\n  Image,\r\n  Modal,\r\n  Nav,\r\n  Navbar,\r\n  Row,\r\n  Toast,\r\n} from \"react-bootstrap\";\r\nimport { CgMenuRight } from \"react-icons/cg\";\r\nimport { HiOutlineSpeakerphone } from \"react-icons/hi\";\r\nimport { BiLogOutCircle } from \"react-icons/bi\";\r\nimport { FaRegCommentDots } from \"react-icons/fa\";\r\nimport { Link } from \"react-router-dom\";\r\n//Database\r\nimport firebase from \"../Database/Firebase\";\r\n\r\nexport default class Announcement extends Component {\r\n  constructor() {\r\n    super();\r\n    //Database\r\n    this.dbUser = firebase.firestore().collection(\"User\");\r\n    this.dbPost = firebase.firestore().collection(\"Post\");\r\n    this.dbPostGet = firebase\r\n      .firestore()\r\n      .collection(\"Post\")\r\n      .orderBy(\"timestamp\", \"desc\");\r\n\r\n    this.state = {\r\n      //SideNav\r\n      width: 0,\r\n      title_pad: 20,\r\n      modal: false,\r\n      //ModalForm\r\n      subject: \"\",\r\n      category: \"\",\r\n      description: \"\",\r\n      notify: \"\",\r\n      //ModalComment\r\n      modalComment: false,\r\n      //userDetails\r\n      fName: \"\",\r\n      lName: \"\",\r\n      email: \"\",\r\n      //Toast\r\n      toast: false,\r\n      //announceData\r\n      announceData: [],\r\n      // commentData\r\n      subjectComment: \"\",\r\n      descriptionComment: \"\",\r\n      fNameComment: \"\",\r\n      lNameComment: \"\",\r\n      //CommentInput\r\n      commentInput: \"\",\r\n      announcID: \"\",\r\n      // commentFinalData\r\n      commentFinalData: [],\r\n      //Search\r\n      SearchData: [],\r\n      SearchWord: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.GetUser();\r\n    this.GetPost();\r\n  }\r\n\r\n  // ******************** Getting User Info ************************\r\n  GetUser = async () => {\r\n    console.log(\"get called\");\r\n    const USER_ID = localStorage.getItem(\"USER_ID\");\r\n    this.dbUser\r\n      .doc(`${USER_ID}`)\r\n      .get()\r\n      .then((snapshot) => {\r\n        this.setState({\r\n          fName: snapshot.data().fName,\r\n          lName: snapshot.data().lName,\r\n          email: snapshot.data().email,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"ERROR SPOT!\", err);\r\n      });\r\n  };\r\n\r\n  // ******************** Getting Posted Data ************************\r\n  GetPost = () => {\r\n    const myArray = [];\r\n    this.dbPostGet\r\n      .get()\r\n      .then((snapshot) => {\r\n        snapshot.forEach((item) => {\r\n          console.log(item.data());\r\n          const {\r\n            subject,\r\n            fName,\r\n            lName,\r\n            description,\r\n            date,\r\n            timestamp,\r\n          } = item.data();\r\n          const docId = item.id;\r\n          myArray.push({\r\n            subject,\r\n            fName,\r\n            lName,\r\n            description,\r\n            docId,\r\n            date,\r\n            timestamp,\r\n          });\r\n        });\r\n        this.setState({\r\n          announceData: myArray,\r\n          SearchData: myArray,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"ERROR SPOT !\", err);\r\n      });\r\n  };\r\n\r\n  // ******************** Post Handler ************************\r\n  Post = () => {\r\n    const timestamp = Date.now();\r\n    var today = new Date();\r\n    var dd = String(today.getDate()).padStart(2, \"0\");\r\n    var mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\r\n    var yyyy = today.getFullYear();\r\n\r\n    const date = dd + \"/\" + mm + \"/\" + yyyy;\r\n\r\n    this.dbPost\r\n      .add({\r\n        subject: this.state.subject,\r\n        category: this.state.category,\r\n        description: this.state.description,\r\n        notify: this.state.notify,\r\n        fName: this.state.fName,\r\n        lName: this.state.lName,\r\n        email: this.state.email,\r\n        timestamp: timestamp,\r\n        date: date,\r\n      })\r\n      .then(() => {\r\n        console.log(\"Posted\");\r\n        this.setState({\r\n          toast: true,\r\n          modal: false,\r\n          //ModalForm\r\n          subject: \"\",\r\n          category: \"\",\r\n          description: \"\",\r\n          notify: \"\",\r\n          //userDetails\r\n          fName: \"\",\r\n          lName: \"\",\r\n          email: \"\",\r\n        });\r\n        this.GetPost();\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"ERROR SPOT !\", err);\r\n      });\r\n  };\r\n\r\n  // ******************** To open a navigation ************************\r\n  openNav = () => {\r\n    this.setState({\r\n      width: 250,\r\n      title_pad: 250,\r\n    });\r\n  };\r\n  // ******************** To close a navigation ************************\r\n\r\n  closeNav = () => {\r\n    this.setState({\r\n      width: 0,\r\n      title_pad: 20,\r\n    });\r\n  };\r\n\r\n  // ******************** Opening Comments Modal ************************\r\n\r\n  ModalComment = (item) => {\r\n    const ID = item.docId;\r\n    this.setState({\r\n      modalComment: true,\r\n      AannouncID: item,\r\n    });\r\n    console.log(ID);\r\n    this.dbPost\r\n      .doc(`${ID}`)\r\n      .get()\r\n      .then((snapshot) => {\r\n        console.log(snapshot.data());\r\n        this.setState({\r\n          subjectComment: snapshot.data().subject,\r\n          descriptionComment: snapshot.data().description,\r\n          fNameComment: snapshot.data().fName,\r\n          lNameComment: snapshot.data().lName,\r\n          idComment: ID,\r\n        });\r\n        this.dbPost\r\n          .doc(`${this.state.idComment}`)\r\n          .get()\r\n          .then((snapshot) => {\r\n            this.setState({\r\n              commentFinalData: snapshot.data().comments,\r\n            });\r\n          })\r\n          .catch((err) => {\r\n            console.log(\"ERROR SPOT !\", err);\r\n          });\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"ERROR SPOT !\", err);\r\n      });\r\n  };\r\n\r\n  // ******************** Posting Comment ************************\r\n\r\n  PostComment = () => {\r\n    console.log(this.state.idComment);\r\n    this.dbPost\r\n      .doc(`${this.state.idComment}`)\r\n      .update({\r\n        comments: firebase.firestore.FieldValue.arrayUnion(\r\n          this.state.commentInput\r\n        ),\r\n      })\r\n      .then(() => {\r\n        this.setState({\r\n          commentInput: \"\",\r\n        });\r\n        console.log(\"Comment Posted\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"ERROR SPOT !\", err);\r\n      });\r\n  };\r\n\r\n  // ******************** Logout Handler ************************\r\n\r\n  async Logout() {\r\n    await localStorage.removeItem(\"USER_ID\");\r\n    this.props.history.push(\"/\");\r\n  }\r\n\r\n  // ******************** Search Handler ************************\r\n\r\n  Search(text) {\r\n    const finalData = this.state.SearchData.filter((item) => {\r\n      const itemData = item.subject\r\n        ? item.subject.toLowerCase()\r\n        : \"\".toLowerCase();\r\n      const textData = text.toLowerCase();\r\n      return itemData.indexOf(textData) > -1;\r\n    });\r\n    console.log(finalData);\r\n\r\n    this.setState({\r\n      announceData: finalData,\r\n      SearchWord: text,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* ******************** Side Nav ************************ */}\r\n        <div\r\n          id=\"mySidenav\"\r\n          class=\"sidenav myfont\"\r\n          style={{ width: this.state.width }}\r\n        >\r\n          <a\r\n            href=\"javascript:void(0)\"\r\n            class=\"closebtn\"\r\n            onClick={() => this.closeNav()}\r\n            href=\"#\"\r\n            className=\"txt_green\"\r\n            style={{\r\n              backgroundColor: \"#233D51\",\r\n              fontWeight: \"bold\",\r\n              fontSize: 20,\r\n            }}\r\n          >\r\n            SA-INTRANET\r\n            <CgMenuRight size={30} style={{ float: \"right\" }} color=\"gray\" />\r\n          </a>\r\n\r\n          <Button\r\n            className=\"m-3 text-left\"\r\n            size=\"sm\"\r\n            variant=\"success\"\r\n            style={{ border: 0, borderRadius: 4 }}\r\n          >\r\n            <a href=\"#\">\r\n              <HiOutlineSpeakerphone size={18} />\r\n              <span className=\"pl-3 span \">Announcement</span>\r\n            </a>\r\n          </Button>\r\n\r\n          <Button\r\n            className=\"m-3 text-left\"\r\n            size=\"sm\"\r\n            variant=\"link\"\r\n            style={{ border: 0, borderRadius: 4 }}\r\n            onClick={() => this.Logout()}\r\n          >\r\n            <a href=\"#\">\r\n              <BiLogOutCircle size={18} />\r\n              <span className=\"pl-3 span \">Log out</span>\r\n            </a>\r\n          </Button>\r\n        </div>\r\n\r\n        {/* ******************** Navigation ************************ */}\r\n\r\n        <Navbar className=\"bg_white shadow-sm\">\r\n          <Navbar.Brand className=\"txt_green my_font \">\r\n            <span style={{ cursor: \"pointer\" }} onClick={() => this.openNav()}>\r\n              <CgMenuRight size={30} color=\"#284255\" />\r\n            </span>\r\n            <span className=\"txt_blue\" style={{ paddingLeft: 20 }}>\r\n              Announcement\r\n            </span>\r\n          </Navbar.Brand>\r\n        </Navbar>\r\n\r\n        {/* ******************** Main View Port ************************ */}\r\n\r\n        <div>\r\n          <Container fluid className=\"bg_gray\">\r\n            <Row>\r\n              <Col>\r\n                <div className=\"p-3 d-flex flex-row float-right\">\r\n                  <div className=\"pr-3\">\r\n                    <Form.Control\r\n                      placeholder=\"Search..\"\r\n                      value={this.state.SearchWord}\r\n                      onChange={(Text) => this.Search(Text.target.value)}\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    <Button\r\n                      onClick={() => this.setState({ modal: true })}\r\n                      variant=\"success\"\r\n                    >\r\n                      + Add\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n\r\n        <div>\r\n          <Container\r\n            fluid\r\n            className=\"bg_gray\"\r\n            style={{ height: window.innerHeight }}\r\n          >\r\n            <Row className=\"bg_gray\">\r\n              <Col>\r\n                {this.state.announceData &&\r\n                  this.state.announceData.map((item, index) => {\r\n                    return (\r\n                      <Card\r\n                        as=\"button\"\r\n                        onClick={() => this.ModalComment(item)}\r\n                        key={index}\r\n                        className=\"m-3\"\r\n                        style={{ border: 0, borderColor: \"white\" }}\r\n                      >\r\n                        <div className=\"d-flex flex-row\">\r\n                          <div>\r\n                            <Card.Body>\r\n                              <div className=\"d-flex flex-row justify-content-between\">\r\n                                <div>\r\n                                  <Card.Title className=\"text-left\">\r\n                                    {item.subject}{\" \"}\r\n                                  </Card.Title>\r\n                                </div>\r\n                                <div>\r\n                                  <p\r\n                                    className=\"text-right\"\r\n                                    style={{ color: \"gray\" }}\r\n                                  >\r\n                                    <FaRegCommentDots size={22} color=\"gray\" />{\" \"}\r\n                                    <sub>3</sub> &nbsp; &nbsp;{\" \"}\r\n                                    <span>{item.date}</span>\r\n                                  </p>\r\n                                </div>\r\n                              </div>\r\n                              <p className=\"text-left\">{item.description}</p>\r\n                            </Card.Body>\r\n                          </div>\r\n                        </div>\r\n                      </Card>\r\n                    );\r\n                  })}\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n\r\n        {/* *******************Add Announcement From Modal******************* */}\r\n        <div>\r\n          <Modal\r\n            size=\"md\"\r\n            show={this.state.modal}\r\n            onHide={() => this.setState({ modal: false })}\r\n          >\r\n            <Modal.Header closeButton>\r\n              <p className=\"font-weight-bold\">Add New Announcement</p>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <Form>\r\n                <Form.Group>\r\n                  <Form.Label>Subject</Form.Label>\r\n                  <Form.Control\r\n                    placeholder=\"\"\r\n                    value={this.state.subject}\r\n                    onChange={(Text) =>\r\n                      this.setState({ subject: Text.target.value })\r\n                    }\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                  <Form.Label>Select Category</Form.Label>\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    value={this.state.category}\r\n                    onChange={(Text) =>\r\n                      this.setState({ category: Text.target.value })\r\n                    }\r\n                  >\r\n                    <option value=\"Announcement\">Announcement</option>\r\n                    <option value=\"Event\">Event</option>\r\n                    <option value=\"Remainder\">Remainder</option>\r\n                  </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Label>Description</Form.Label>\r\n                  <Form.Control\r\n                    as=\"textarea\"\r\n                    rows=\"2\"\r\n                    placeholder=\"\"\r\n                    value={this.state.description}\r\n                    onChange={(Text) =>\r\n                      this.setState({ description: Text.target.value })\r\n                    }\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                  <Form.Label>Notify To</Form.Label>\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    value={this.state.notify}\r\n                    onChange={(Text) =>\r\n                      this.setState({ notify: Text.target.value })\r\n                    }\r\n                  >\r\n                    <option value=\"To All Members\">To All Members</option>\r\n                    <option value=\"Choose Persons\">Choose Persons</option>\r\n                    <option value=\"Choose Departments/Role\">\r\n                      Choose Departments/Role\r\n                    </option>\r\n                  </Form.Control>\r\n                </Form.Group>\r\n              </Form>\r\n              <div className=\"d-flex flex-row float-right pt-3 mb-4\">\r\n                <div>\r\n                  <Button\r\n                    onClick={() => this.setState({ modal: false })}\r\n                    variant=\"light\"\r\n                    style={{ width: 100, marginRight: 20 }}\r\n                  >\r\n                    Discard\r\n                  </Button>\r\n                </div>\r\n                <div>\r\n                  <Button\r\n                    onClick={() => this.Post()}\r\n                    variant=\"success\"\r\n                    style={{ width: 100 }}\r\n                  >\r\n                    Select\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </Modal.Body>\r\n          </Modal>\r\n\r\n          {/* ************************ Comment Modal *************************** */}\r\n          <Modal\r\n            show={this.state.modalComment}\r\n            onHide={() => this.setState({ modalComment: false })}\r\n          >\r\n            <Modal.Header closeButton>Comment</Modal.Header>\r\n            <Modal.Body>\r\n              <div>\r\n                <strong>{this.state.subjectComment}</strong>\r\n                <p>\r\n                  <em>\r\n                    {this.state.fNameComment} {this.state.lNameComment}\r\n                  </em>\r\n                </p>\r\n                <p>{this.state.descriptionComment}</p>\r\n              </div>\r\n              <div>\r\n                <Form>\r\n                  <Form.Group>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"comment...\"\r\n                      onChange={(Text) =>\r\n                        this.setState({ commentInput: Text.target.value })\r\n                      }\r\n                      value={this.state.commentInput}\r\n                    />\r\n                  </Form.Group>\r\n                  <Button\r\n                    onClick={() => this.PostComment()}\r\n                    variant=\"success\"\r\n                    size=\"sm\"\r\n                  >\r\n                    Send\r\n                  </Button>\r\n                </Form>\r\n              </div>\r\n              <div className=\"pt-3\">\r\n                <p style={{ color: \"gray\" }}>\r\n                  <em>Comments</em>\r\n                </p>\r\n                {this.state.commentFinalData &&\r\n                  this.state.commentFinalData.map((item, index) => {\r\n                    return (\r\n                      <div key={index}>\r\n                        <p>➙ {item}</p>\r\n                      </div>\r\n                    );\r\n                  })}\r\n              </div>\r\n            </Modal.Body>\r\n          </Modal>\r\n\r\n          {/* ******************* Success Toast ******************* */}\r\n\r\n          <Toast\r\n            delay={2000}\r\n            show={this.state.toast}\r\n            autohide\r\n            onClose={() => this.setState({ toast: false })}\r\n            className=\"bg-success\"\r\n            style={{\r\n              position: \"absolute\",\r\n              top: 50,\r\n              left: 0,\r\n              margin: 20,\r\n            }}\r\n          >\r\n            <Toast.Header className=\"bg-success\">\r\n              <strong className=\"mr-auto txt_white\">SA-INTRANET</strong>\r\n            </Toast.Header>\r\n            <Toast.Body>\r\n              <p className=\"txt_white\">Announcement Posted !</p>\r\n            </Toast.Body>\r\n          </Toast>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\n//Pages\nimport GettingStartedPage from \"./Pages/GettingStartedPage\";\nimport LoginPage from \"./Pages/LoginPage\";\nimport PersonalDetails from \"./Pages/PersonalDetails\";\nimport Announcement from \"./Pages/Announcement\";\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact component={GettingStartedPage} />\n          <Route path=\"/LoginPage\"  component={LoginPage} />\n          <Route path=\"/PersonalDetails\"  component={PersonalDetails} />\n          <Route path=\"/Announcement\"  component={Announcement} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Styles/Style.css'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/2.a27cdc1b.png\";"],"sourceRoot":""}